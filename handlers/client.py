from keyboards.client_kb import kb_client, kb_client_entry
from keyboards.admin_kb import kb_admin, kb_admin_free
from aiogram import Dispatcher
from aiogram import types
from create_bot import bot
from random import randint
from data_base import sqlite_db

ID = None


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def commands_start(message: types.Message):
    await bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç üëã\n–ö–∞–∂–¥–∞—è —à–µ—Å—Ç–∞—è —á–∞—à–∫–∞ –∫–æ—Ñ–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!',
                           reply_markup=kb_client_entry)


# –ö–Ω–æ–ø–∫–∞ "–Ø –≤ –ë–∏–æ–≥—Ä–∞—Ñ–∏–∏"
async def entry_command(message: types.Message):
    global ID
    ID = message.from_user.id
    await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=kb_client)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
async def get_cup(callback: types.CallbackQuery):
    await callback.message.edit_text('–°–æ–æ–±—â–∏—Ç–µ –±–∞—Ä–∏—Å—Ç–∞ —á–µ—Ç—ã—Ä–µ—Ö–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥', reply_markup=None)
    await coffee(message=callback.message)



# –ó–∞–ø–∏—Å—å –≤ –ë–î –Ω–æ–≤–æ–π —á–∞—à–∫–∏
async def paste_info(callback: types.CallbackQuery):
    await put_data(message=callback.message)
    await callback.answer(f'{ID}+1 —á–∞—à–∫–∞', show_alert=True)


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π —á–∞—à–∫–∏
async def get_free(callback: types.CallbackQuery):
    await callback.message.edit_text('–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç –±–∞—Ä–∏—Å—Ç–∞', reply_markup=None)
    await get_free_cup_q(message=callback.message)


# –í–Ω–µ—Å–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î (–£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π —á–∞—à–∫–∏)
async def get_free_1(callback: types.CallbackQuery):
    await get_free_cup(message=callback.message)
    await callback.answer(f'{ID}–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —á–∞—à–∫–∞!', show_alert=True)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞
async def coffee(message: types.Message):
    code = randint(1000, 9999)
    await bot.send_message(message.chat.id, f"{code}")
    await bot.send_message("-1001649374253", f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–¥: {code}", reply_markup=kb_admin)


# –ó–∞–ø–∏—Å—å –≤ –ë–î –Ω–æ–≤–æ–π —á–∞—à–∫–∏
async def put_data(message: types.Message):
    sqlite_db.cur.execute(f"INSERT INTO cup(id, amount, free_cups) SELECT {ID}, 0, 0 WHERE NOT EXISTS(SELECT 1 FROM "
                          f"cup WHERE id = {ID})")
    sqlite_db.cur.execute(f"UPDATE cup SET amount = amount + 1 WHERE id = {ID}")
    sqlite_db.cur.execute(f"UPDATE cup SET free_cups = free_cups + 1, amount = 0 WHERE amount = 5")
    sqlite_db.base.commit()


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π —á–∞—à–∫–∏
async def get_free_cup_q(message: types.Message):
    amount_free_cups = sqlite_db.cur.execute(f'SELECT free_cups FROM cup WHERE id = {ID}').fetchone()
    sqlite_db.base.commit()
    await bot.send_message("-1001649374253", f"–£ –≥–æ—Å—Ç—è {amount_free_cups[0]} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —á–∞—à–µ–∫")
    await bot.send_message("-1001649374253", f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–æ—Ñ–µ?", reply_markup=kb_admin_free)


# –í–Ω–µ—Å–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î (–£–¥–∞–ª–µ–Ω–∏–µ –æ–¥–Ω–æ–π –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π —á–∞—à–∫–∏)
async def get_free_cup(message: types.Message):
    sqlite_db.cur.execute(f"UPDATE cup SET free_cups = free_cups - 1 WHERE id = {ID}")
    sqlite_db.base.commit()
    # await bot.send_message("-1001649374253", f"–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —á–∞—à–∫–∞!")


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(commands_start, commands=['start', 'help'])
    dp.register_message_handler(entry_command, lambda message: '–Ø –≤ –ë–∏–æ–≥—Ä–∞—Ñ–∏–∏' in message.text)
    dp.register_callback_query_handler(get_cup, text='cup')
    dp.register_callback_query_handler(paste_info, text='right')
    dp.register_callback_query_handler(get_free, text='get_free')
    dp.register_callback_query_handler(get_free_1, text='free_cup_done')
